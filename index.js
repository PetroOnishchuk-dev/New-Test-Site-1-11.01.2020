[{"subtitle":"Use: SwiftUI, Firebase, Firestore","id":"0DB3029E-A987-477D-89A0-BF78E23D7713","title":"To-Do App. SwiftUI & Firebase","dateCreated":"01-05-2023","lastDateUpdated":"01-23-2023","swiftUIVersion":"4.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/To-Do-App-SwiftUI-Firebase","id":"BDF437C8-0551-4B7A-A33B-9945F48FCCFF","subtitle":"Use: SwiftUI, Firebase, Firestore","title":"To-Do App. SwiftUI & Firebase","youTubeLink":"https:\/\/www.youtube.com\/watch?v=hNPIem4t1_g&list=PL3pUvT0fmHNi2Mu3_s-ZlgKKSw6-b05A7","date":"01-23-2023","nameOfSeries":"To-Do App. SwiftUI & Firebase","description":"Firebase is an app development platform that helps build amazing applications. Firebase is also the most popular backend in the mobile community. With Firebase we can do so many things. We can use Firebase Authentication, to implement user authentication. Firebase Firestore gives as an amazing way to save data in the cloud and real-time update data. Firebase also has Firebase analytics. In this series of projects, I try to explain how to set up Firebase and also how you can use Firebase with the SwiftUI application. Through this project step by step, I will create a To-Do application.","swiftUIVersion":"4.0","isSeriesOfVideo":true}]},{"subtitle":"Work with SwiftUI, UIKit and PushNotifications","id":"AB1996CB-BA4A-4DCE-93C2-B77D69E05AE3","title":"AWS SNS PushNotifications","dateCreated":"08-12-2022","lastDateUpdated":"08-12-2022","swiftUIVersion":"4.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/AmazonSNSandPushNotification01","id":"D5920BD7-A266-4334-A2A4-55093EFAB3C6","subtitle":"Work with SwiftUI, UIKit and PushNotifications","title":"AWS SNS PushNotifications","youTubeLink":"https:\/\/youtu.be\/h7xA9TYqi6w","date":"08-12-2022","nameOfSeries":"AWS SNS PushNotifications","description":"PushNotifications is the main way to send messages to your app through the Apple Push Notification service (APNs) even if your app isnâ€™t running or the phone is sleeping. We have a couple of services that help us send push notifications such as Firebase and Amazon's AWS Simple Notifications Service (SNS). In this tutorial, I try to show how to send notifications by using Amazon SNS. I will work with SwiftUI and UIKit.","swiftUIVersion":"4.0","isSeriesOfVideo":true}]},{"subtitle":"Move data with WebSockets","id":"8F89A0E2-F038-4CBC-863A-0E8E06CFB548","title":"SwiftUI, GO, WebSocket servers","dateCreated":"08-01-2022","lastDateUpdated":"08-12-2022","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/WebSocketsSwiftUIGolangWeb","id":"32F81817-C3AC-4991-9CB2-EB4A4ECB20C2","subtitle":"Move data with WebSockets","title":"SwiftUI, GO, WebSocket servers","youTubeLink":"https:\/\/www.youtube.com\/watch?v=lFxrOW2rLYg&list=PL3pUvT0fmHNg2ayciKq9HgBqOgr07GlF8","date":"08-01-2022","nameOfSeries":"SwiftUI, GO, WebSocket servers","description":"WebSocket API is a protocol that makes it possible to open a two-way interactive communication session between the users and a server. In this tutorial, I try to show how you can use WebSocket protocol with SwiftUI and Go. I try to explain haw you can set up your SwiftUI project and Golang project and also Web project. And then after all I show you, how we can move data between three applications.","swiftUIVersion":"3.0","isSeriesOfVideo":true}]},{"subtitle":"Work with databases through GO local server.","id":"1130B130-667C-4D3D-863F-025439B7B252","title":"SwiftUI, GO, SQLite, MySQL, PostgreSQL","dateCreated":"07-07-2022","lastDateUpdated":"07-07-2022","swiftUIVersion":"","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/URLSessionGenericDatabaseSwiftUIGolang01","id":"A60BB827-B2D3-43AF-B398-60FDBF895775","subtitle":"Work with databases through GO local server","title":"SwiftUI, GO, SQLite, MySQL, PostgreSQL","youTubeLink":"https:\/\/www.youtube.com\/watch?v=r36N7LRO_kI&list=PL3pUvT0fmHNj5M3EkRXJV1Iy55T2Kaq7G","date":"07-07-2022","nameOfSeries":"SwiftUI, GO, SQLite, MySQL, PostgreSQL","description":"In iOS Development we have CoreData, it's like our local database, but in software development, we can work with another database also. Examples: SQLite, MySQL, PostgreSQL. In this series of videos by creating the SwiftUI application and Go (Golang) application I show You, haw You can work with all databases that I mentioned previously.","swiftUIVersion":"3.0","isSeriesOfVideo":true}]},{"subtitle":"POST & GET Request & GO local server.","id":"63DA6F80-B541-4CC9-B298-83A55E58A5DB","title":"SwiftUI & Golang local server","dateCreated":"04-28-2022","lastDateUpdated":"04-28-2022","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/URLSessionAndSwiftUIasync:await","id":"03CD88A9-E57E-411E-8B21-379A3BB4DACA","subtitle":"POST & GET Request & GO local server","title":"SwiftUI & Golang - GET & POST","youTubeLink":"https:\/\/www.youtube.com\/playlist?list=PL3pUvT0fmHNjtUGNjN8tBucDekgKLFATM","date":"04-28-2022","nameOfSeries":"SwiftUI & Golang local server","description":"For making POST request (send data to the server) and GET (request data from the server) we can also use a local server. In this series of videos, I try to explain how to make POST and GET requests to the local server created by using Go (Golang) programing language.And also how you create a local server for testing.","swiftUIVersion":"3.0","isSeriesOfVideo":true}]},{"subtitle":"5 tutorials related to CoreData","id":"BF7523B1-7FD5-4DA9-825A-30AE29276FFF","title":"CoreData & SwiftUI","dateCreated":"03-19-2022","lastDateUpdated":"03-19-2022","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/CoreData%26SwiftUI01","id":"D1337278-0D40-4A6D-A3E9-A37C6558834A","subtitle":"5 tutorials related to CoreData","title":"CoreData & SwiftUI","youTubeLink":"https:\/\/www.youtube.com\/watch?v=C1M2nJ7xphI&list=PL3pUvT0fmHNh6bARqrWYE6_79WF_HpU-w","date":"03-19-2022","nameOfSeries":"CoreData & SwiftUI","description":"Core Data is a framework in that you use data in your applications for offline use, and also for cache temporary data. This is the main instrument for saving data offline in Apple Mobile Development. Core Data have a couple of components.   An entity in CoreData (something like a table in a database) describes an object, including its name, attributes, and relationships. In this series of tutorials, I try to explain how Core Data works with SwiftUI. How you can pass data through a couple of views, and take data from CoreData.","swiftUIVersion":"3.0","isSeriesOfVideo":true}]},{"subtitle":"Show data in iPhone and iPad","id":"0FA204ED-6438-428E-AB9E-323F72BA9AE0","title":"Show data with Popover","dateCreated":"01-06-2022","lastDateUpdated":"01-06-2022","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/Popover%26SwiftUI01\/Popover%26SwiftUI01","id":"9B8AC4F3-B154-45C4-B6AC-D1A4E874C62A","subtitle":"Show data in iPhone and iPad","title":"Show data with Popover","youTubeLink":"https:\/\/youtu.be\/rS3yKI0IJ9M","date":"01-06-2022","nameOfSeries":"","description":"With popover in SwiftUI, we can display different kinds of information. To display a view we must place a new view inside the popover and then by using the boolean property or binding property, we can display our view. ","swiftUIVersion":"3.0","isSeriesOfVideo":false}]},{"subtitle":"Context Menu on iPhone and iPad","id":"DC945D10-E78D-4451-8607-485C3AA6C5D7","title":"Context Menu & SwiftUI","dateCreated":"12-26-2021","lastDateUpdated":"12-26-2021","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/ContextMenu%26SwiftUI01","id":"73A7BF95-5162-4571-B482-B0DFA3734A0C","subtitle":"Context Menu on iPhone and iPad","title":"Context Menu & SwiftUI","youTubeLink":"https:\/\/youtu.be\/Vm8yaAioeGk","date":"12-26-2021","nameOfSeries":"","description":"Context menus are a container of view that presents a quick action for the UI elements. Usually, a context menu is triggered by long pressing on an item on the screen. In this tutorial, I try to explain how you can use this Context many in iOS and iPadOS.","swiftUIVersion":"3.0","isSeriesOfVideo":false}]},{"subtitle":"Work with data and Confirmation Dialog","id":"08BCBBBB-4F99-4766-B2DD-D93F1AD7B232","title":"Confirmation Dialog &  Action Sheet","dateCreated":"12-21-2021","lastDateUpdated":"12-21-2021","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/ConfirmationDialog%26SwiftUI01\/ConfirmationDialog%26SwiftUI01","id":"78332CBF-D93C-4D66-AF65-9FFBBDE43063","subtitle":"Work with data and Confirmation Dialog","title":"Confirmation Dialog &  Action Sheet","youTubeLink":"https:\/\/youtu.be\/GMQx4azTPj4","date":"12-21-2021","nameOfSeries":"","description":"Confirmation Dialog is so similar to Alert. But Alert we must provide for display mo important information. The confirmation dialog is most used to confirm some dangerous actions in our apps. For example, present a confirmation dialog before deleting the sensitive data.","swiftUIVersion":"3.0","isSeriesOfVideo":false}]},{"subtitle":"Use FileManager for work with data. ","id":"D2436C18-BE03-427A-94A2-086759AE4E17","title":"FileManager & SwiftUI","dateCreated":"09-23-2021","lastDateUpdated":"10-08-2021","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/FileManager%26SwiftUI","id":"4E6DA1B6-E432-45B2-9246-BD72F068EA32","subtitle":"Create directory & remove item","title":"Use FileManager for work with Data","youTubeLink":"https:\/\/www.youtube.com\/watch?v=MNDBL7lEZv0&list=PL3pUvT0fmHNi1UHpFh-Lzy_-YUqjCaV2I","date":"10-08-2021","nameOfSeries":"FireManager & SwiftUI","description":"FileManager can provide us with the document directory for the current user. And then by using this document directory we can save and read some type of data.","swiftUIVersion":"3.0","isSeriesOfVideo":true}]},{"subtitle":"Save data with UserDefault & @AppStorage","id":"368F5C43-91E6-4762-BF41-2C7045795000","title":"UserDefault & @AppStorage","dateCreated":"07-22-2021","lastDateUpdated":"07-22-2021","swiftUIVersion":"3.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/UserDefaults%26AppStorage01","id":"362DAB39-04B6-43CB-8F73-FFA4FB6BBCAC","subtitle":"Save data with UserDefault & @AppStorage","title":"UserDefault & @AppStorage","youTubeLink":"https:\/\/youtu.be\/Pohfg_6OBL0","date":"07-22-2021","nameOfSeries":"","description":"With 'UserDefault & @AppStorage' you can save data in our application(not secure data). In this tutorial, I try to explain how they work together and why SwiftUI has an @AppStorage. ","swiftUIVersion":"3.0","isSeriesOfVideo":false}]},{"subtitle":"Work with UIKit framework","id":"041964EA-4006-49CB-B319-CA2246CC653A","title":"UIKit Tutorials","dateCreated":"07-02-2021","lastDateUpdated":"08-12-2022","swiftUIVersion":"","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-UIKit-Tutorials\/tree\/master\/CustomUIButton01","id":"813E8F22-8824-4AF0-A67B-FAA88E00EF6F","subtitle":"Create UIButton  programmatically","title":"UIKit topic. UIButton  programmatically.","youTubeLink":"https:\/\/youtu.be\/W-caDwLOi4I","date":"07-02-2021","nameOfSeries":"UIKit Tutorials","description":"With the UIButton in UIKit, we can execute custom code in our applications. We can create UIButton in UIKit by using Storyboard and programmatically, In this project, I try to explain how you can create UIButton in UIKit programmatic age. ","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-UIKit-Tutorials\/tree\/master\/UITabBarController%26TableVC01","id":"F7639D0E-F690-4F74-851A-9EC46FE9595F","subtitle":"Work with UITabBarController and Data.","title":"UIKit topic. UITabBarController & UITableViewController & UITableViewCell","youTubeLink":"https:\/\/youtu.be\/-Tc8anX6feU","date":"07-11-2021","nameOfSeries":"UIKit Tutorials","description":"UITabBarController gives the ability to create Tabs. Tabs are displayed at the bottom of the window and allow you to switch between screens quickly. Each tab responds to its own view. In this project, I try to display data with UITabBarController and also with UITableViewController.","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-UIKit-Tutorials\/tree\/master\/UITableView%26UIViewController01\/UITableView%26UIViewController01","id":"9D084569-E9B9-4CC4-88F2-DB9068771A6E","subtitle":"Display data with UITableView","title":"UIKit topic. UITableView & UIViewController","youTubeLink":"https:\/\/youtu.be\/kDqzUPyZhik","date":"01-10-2022","nameOfSeries":"UIKit Tutorials","description":"This tutorial demonstrates common use cases for the UITableView and UIViewController classes. I try to explain how you can create UITableView with UIViewController programmatically and display data.","swiftUIVersion":"2.0","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/WebSocketsSwiftUIGolangWeb\/UIKitAndWebSockets","id":"E08D76BE-F826-4F11-8FFF-71644E8F157D","subtitle":"Use UIKit, Golang & PieSocket WebSocket server","title":"UIKit & PieSocket WebSocket","youTubeLink":"https:\/\/youtu.be\/V_c0hSkRGwg","date":"08-12-2022","nameOfSeries":"UIKit Tutorials","description":"WebSocket API is a protocol that makes it possible to open a two-way interactive communication session between the users and a server. In this tutorial, I try to show how you can use WebSocket protocol with UIKit iOS development.","swiftUIVersion":"","isSeriesOfVideo":true}]},{"subtitle":"Display data with TabView & List","id":"235591D7-A779-4664-8522-41A9E05E2E11","title":"TabView & List","dateCreated":"06-17-2021","lastDateUpdated":"06-17-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/EmojiTabView01","id":"D24E316A-1BFD-484C-AD5A-CABEE0256DE5","subtitle":"Display data with TabView & List","title":"TabView & List","youTubeLink":"https:\/\/youtu.be\/ey57sAx1adA","date":"06-17-2021","nameOfSeries":"","description":"SwiftUI TabView is a view that lets us create Tab based UI. Tabs are displayed at the bottom of the window and allow you to switch between screens quickly. each tab responds to its own view. In this topic, I try to show you how you can use TabView with List. ","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Display data with TabView & List","id":"235591D7-A779-4664-8522-41A9E05E2E11","title":"TabView & List","dateCreated":"06-17-2021","lastDateUpdated":"06-17-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/EmojiTabView01","id":"D24E316A-1BFD-484C-AD5A-CABEE0256DE5","subtitle":"Display data with TabView & List","title":"TabView & List","youTubeLink":"https:\/\/youtu.be\/ey57sAx1adA","date":"06-17-2021","nameOfSeries":"","description":"SwiftUI TabView is a view that lets us create Tab based UI. Tabs are displayed at the bottom of the window and allow you to switch between screens quickly. each tab responds to its own view. In this topic, I try to show you how you can use TabView with List. ","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Display data by using different views","id":"F55B986B-B9F3-4DD7-92E2-BD74D5978002","title":"Hierarchical lists, OutlineGroup & DisclosureGroup","dateCreated":"06-03-2021","lastDateUpdated":"06-03-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/HierarchicalList01","id":"C56232D0-BFBB-4EEE-8A17-129433BF78A8","subtitle":"Display data by using different views","title":"Hierarchical lists, OutlineGroup & DisclosureGroup","youTubeLink":"https:\/\/youtu.be\/_wgKQX5scJU","date":"06-03-2021","nameOfSeries":"","description":" OutlineGroup and  DisclosureGroup are very useful when we'd like to display hierarchical lists. What is the difference between these two structures and how you can use this I try to explain in my video.","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"POST, receive and display data.","id":"DD4DBD59-7A48-4BD2-B586-A9FFE53F0E89","title":"POST Request & URLSession","dateCreated":"05-17-2021","lastDateUpdated":"05-17-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/URLSessionAndPOSTRequest01","id":"535B9654-592F-4138-8C9B-C2B73638BC69","subtitle":"POST, receive and display data.","title":"POST Request & URLSession","youTubeLink":"https:\/\/youtu.be\/sBTAOhzHQzQ","date":"05-17-2021","nameOfSeries":"","description":"A POST request method is used to send data to a server to create\/update a resource. In my examples, I try to show, how you can create a POST request by using URLSession in SwiftUI. ","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Display data with alert","id":"0BDF1BCB-D257-4B06-9DE7-DDF72DDE1D52","title":"Alert & SwiftUI","dateCreated":"04-22-2021","lastDateUpdated":"12-16-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/EmojiAlert01","id":"A5000275-CC2E-4DBE-A10C-B55A8261BBDF","subtitle":"Using @Binding for show alert","title":"Alert & @Binding property","youTubeLink":"https:\/\/youtu.be\/v8J2vKKCRa0","date":"04-22-2021","nameOfSeries":"","description":"In this project, I try to explain how you can present Alert in the SwiftUI application by using the @Binding property. All aspects of those topics I try to explain in my video.","swiftUIVersion":"2.0","isSeriesOfVideo":false},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/Alert%26SwiftUI01","id":"51FF852E-C12B-4BBD-B55B-596613F5AE6D","subtitle":"Using @Binding for show alert","title":"Alert & SwiftUI 3.0","youTubeLink":"https:\/\/youtu.be\/EGkfGyDVYGk","date":"12-16-2021","nameOfSeries":"","description":"Alert modifier are so common way to interact with users or present some urgent data in the application. But how do you present it and what different variants of Alert you can find by going to the link below.","swiftUIVersion":"3.0","isSeriesOfVideo":false}]},{"subtitle":"GET Request & Codable JSON Data","id":"3446A42E-3BB6-43CE-99DE-FBDAB80B54B3","title":"Get Request & URLSession","dateCreated":"04-13-2021","lastDateUpdated":"05-13-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/URLSessionAndCodable01","id":"32AA6065-0389-467B-A24D-C6A93EDE00F1","subtitle":"GET Request & Codable JSON Data","title":"PART: #1. Get Request & URLSession","youTubeLink":"https:\/\/youtu.be\/Un6Wrh98Q1Y","date":"04-13-2021","nameOfSeries":"Get Request & URLSession","description":"URLSession class and related classes give the ability to download data by URLs. GET method request used to request data.  In this Part #1, I want to explain how we can make a GET Request in SwiftUI.","swiftUIVersion":"2.0","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/URLSessionAndCodable01Part2","id":"79887C81-D287-4D85-8054-29B6A7520BC8","subtitle":"GET Request & Codable JSON Data","title":"PART: #2. Get Request & URLSession","youTubeLink":"https:\/\/youtu.be\/3Y9Rc6XwgRA","date":"05-13-2021","nameOfSeries":"Get Request & URLSession","description":"This is Part #2 of the topic about URLSession and GET method requests. In this project, I resume explaining how you can make GET method requests in SwiftUI. Request data and display it in the application.","swiftUIVersion":"2.0","isSeriesOfVideo":true}]},{"subtitle":"Pass and display data with NavigationView","id":"87D8A5D6-2796-4D35-8047-1B716C0E8E98","title":"NavigationView, NavigationLink & List","dateCreated":"02-28-2021","lastDateUpdated":"02-28-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/NavigationViewNavigationLinkAndList","id":"8C92CD0F-E7D8-46EC-8E9B-E25DCA090234","subtitle":"Pass and display data with NavigationView","title":"NavigationView, NavigationLink & List","youTubeLink":"https:\/\/youtu.be\/F0u_XR6tQyA","date":"02-28-2021","nameOfSeries":"","description":"NavigationView is one of the most important components of a SwiftUI, allowing as presentation of a different view, pop, and push screen, presenting a different type of information. Also for moving and presenting another view I use NavigationLink.","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Display data through List and ForEach","id":"5A6F9598-4327-4A84-AD13-B57C5FF69D81","title":"List & ForEach","dateCreated":"02-10-2021","lastDateUpdated":"02-10-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/ListAndForEach01","id":"A0FAA68E-5FE6-4950-962A-FE2C9824A5AE","subtitle":"Display data through List and ForEach ","title":"List & ForEach","youTubeLink":"https:\/\/youtu.be\/jMa7ZaDESJk","date":"02-10-2021","nameOfSeries":"","description":"List in SwiftUI a structure that helps display a columnar view. ForEach also struct, with similar functions but those two are not the same, the both work together perfectly.","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Build HStack and LazyHStack","id":"AFA6BE56-8965-4983-83B9-2A8106D81D88","title":"HStack and LazyHStack","dateCreated":"01-08-2021","lastDateUpdated":"01-08-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/HStackProject01","id":"39BDFDC7-5063-4E2C-9BD5-3CD603615B08","subtitle":"Build HStack and LazyHStack","title":"HStack and LazyHStack","youTubeLink":"https:\/\/youtu.be\/Rhs8a5_c3QA","date":"01-08-2021","nameOfSeries":"","description":"HStack and LazyHStack both give the ability to stack view horizontally, side by side. The main difference is that LazyHStack download cell if needed (if visible), while HStack downloads all cell together.","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Build VStack & LazyVStack","id":"5314A74A-750B-4A5A-B24A-E31B740C6D97","title":"VStack and LazyVStack","dateCreated":"01-06-2021","lastDateUpdated":"01-06-2021","swiftUIVersion":"2.0","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-SwiftUI-Tutorials\/tree\/master\/VStackProject01","id":"A2AB6327-54E1-4F7C-958C-178EBAABA943","subtitle":"Build VStack & LazyVStack","title":"VStack and LazyVStack","youTubeLink":"https:\/\/youtu.be\/imxzXEwUNos","date":"01-06-2021","nameOfSeries":"","description":"VStack and LazyVStack both give the ability to stack view vertically, from top to bottom. The main difference is that LazyVStack download cell if needed (if visible), while VStack downloads all cell together.","swiftUIVersion":"2.0","isSeriesOfVideo":false}]},{"subtitle":"Basic of Swift development","id":"6AEE1AB4-36D0-4097-BB14-B02EBE825AAA","title":"Swift Fundamental","dateCreated":"01-11-2020","lastDateUpdated":"06-09-2021","swiftUIVersion":"","allTutorials":[{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-Swift-Programming-Language-Tutorials\/tree\/master\/ConstantsVariablesAndComments.playground","id":"6B0B94C2-CD6F-4F24-ACB4-FB4B75292C1A","subtitle":"Basic of Properties.","title":"Constant Variables & Comments","youTubeLink":"https:\/\/youtu.be\/H9VbNznYxvo","date":"01-11-2020","nameOfSeries":"Swift Fundamental","description":"With 'var' keyword we declare a variable, and the 'let' keyword declares a constant.  Below, you can find the links to the GitHub repository and YouTube video with my explanations.","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-Swift-Programming-Language-Tutorials\/tree\/master\/IntegersAndFloating-PointNumbers.playground","id":"50F4A884-F4FD-49D2-A32F-F21D72C3B9EA","subtitle":"Work with numbers.","title":"Integers &\nFloating-Point Numbers.","youTubeLink":"https:\/\/youtu.be\/N_J5_abOmGU","date":"06-22-2020","nameOfSeries":"Swift Fundamental","description":"The main difference between Integers and Floating-point numbers is, Integers are numbers without fractional components, such as 88, 10, and 7, but Floating-point numbers are numbers with a fractional components such as 2.10, 10.4, 44.29. ","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-Swift-Programming-Language-Tutorials\/tree\/master\/BasicOperatorsPart1.playground","id":"BCD0DAB2-23E3-4C85-A33B-93CA74EE8E3F","subtitle":"Basic of Assignment & Remainder operators","title":"Assignment, Arithmetic &\nRemainder operators.","youTubeLink":"https:\/\/youtu.be\/_zUNEo8gZMM","date":"06-30-2020","nameOfSeries":"Swift Fundamental","description":"The assignment Operator in Swift is the most common. With this operator, we can initialize or update a value in the property. With Arithmetic Operators (+, -, *,\/) we can do Arithmetic operations with numbers and with another type of value. Remainder operator % returns the remainder after dividing one number by another.     16 % 5 = 1. Because we can fit three 5s into 16, and in the end, we have the remainder 1.","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-Swift-Programming-Language-Tutorials\/tree\/master\/String.playground","id":"148B4099-0571-4FF4-B3A3-E694498915DE","subtitle":"Basics of Strings.","title":"Strings","youTubeLink":"https:\/\/youtu.be\/7RyKO95J6qs","date":"07-09-2020","nameOfSeries":"Swift Fundamental","description":"A string is a series of characters, such as 'Swift' or 'Apple' .In that tutorial, I try to explain the basics of Strings and what you can do with Strings.","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-Swift-Programming-Language-Tutorials\/tree\/master\/CollectionTypesPart1Array.playground","id":"E24DD5CB-E257-45C5-BB9E-E8290656F816","subtitle":"Data and Array","title":"Array. Collection type","youTubeLink":"https:\/\/youtu.be\/sJrVvgiDKSI","date":"08-28-2020","nameOfSeries":"Swift Fundamental","description":"In this tutorial, you will learn about Swift arrays with the help of examples. An array is a collection of the same types of data. This is basic and so important content in Swift Development.","swiftUIVersion":"","isSeriesOfVideo":true},{"gitHubLink":"https:\/\/github.com\/PetroOnishchuk\/The-Swift-Programming-Language-Tutorials\/tree\/master\/ComputedProperties01.playground","id":"6F2D9D45-06FD-4BB3-920E-A7FE4987D1E1","subtitle":"Work with Computed properties. ","title":"Computed properties.","youTubeLink":"https:\/\/youtu.be\/ZSgcI3HwVzw","date":"06-09-2021","nameOfSeries":"Swift Fundamental","description":"We have two types of property: a stored property for stored value, and a computed property, for calculating the value before we take this value. The value of the computed property can be dependent on another property. ","swiftUIVersion":"","isSeriesOfVideo":true}]}]
